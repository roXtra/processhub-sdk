name: Trigger Release Creation

on:
  workflow_dispatch:
    inputs:
      isfinalreleasebuild:
        description: 'Should this be a final release build (true OR false)'
        required: true
        default: 'false'

jobs:
  configure:
    name: Configure Release Branch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    env:
      isprereleasebuild: ${{ github.event.inputs.isfinalreleasebuild != 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
          token: ${{ secrets.DEVBOT_GH_TOKEN }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure Git
        run: |
          git config user.name 'Development Bot'
          git config user.email 'devbot@roxtra.com'
      - name: Install dependencies
        run: npm ci
      - id: version-upgrade
        name: Upgrade Version
        # Make next RC Final or create pre-release based on chosen variant
        run: |
          if ${{ env.isprereleasebuild }}; then npm version prerelease; else npm version minor; fi
          NEWVERSION=$(echo "console.log(require('./package.json').version);" | node)
          echo "::set-output name=newversion::$(echo $NEWVERSION)"
      - name: Create Branch and Push Branch and Tag
        run: |
          echo "Create Release Branch"
          git checkout -b release-v${{ steps.version-upgrade.outputs.newversion }}
      - name: Bump Version to next RC
        # Only bump version to next RC if release is non-prerelease
        if: ${{ env.isprereleasebuild == 'false' }}
        run: |
          echo "Bump Version to next RC"
          npm version --git-tag-version false preminor
          git commit -a -m "Bump RC Version"
      - name: Push Branch and Tag
        run: |
          echo "Push branch and tag"
          git push -u origin release-v${{ steps.version-upgrade.outputs.newversion }}
          git push origin v${{ steps.version-upgrade.outputs.newversion }}
      - name: Create PR for new Version
        uses: repo-sync/pull-request@v2
        with:
          source_branch: 'release-v${{ steps.version-upgrade.outputs.newversion }}'
          destination_branch: 'master'
          pr_title: 'Release v${{ steps.version-upgrade.outputs.newversion }}'
          pr_body: Updates version to v${{ steps.version-upgrade.outputs.newversion }}
          github_token: ${{ secrets.DEVBOT_GH_TOKEN }}
          pr_assignee: '${{ github.actor }}'
          pr_draft: false